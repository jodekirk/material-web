//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use 'sass:meta';
@use '@material/theme/state';
@use 'third_party/javascript/material_web_components/ripple/ripple-theme';
@use '@material/mwc-../elevation/lib/elevation-theme';
@use '@material/mwc-../sass/elevation';
@use '@material/mwc-../sass/resolvers';
@use '@material/mwc-../sass/theme';

$selectors: (
  // May have to change to :not(:disabled) if we decide to support anchor tags
  enabled: ':enabled',
  disabled: ':disabled',
  focus: ':focus',
  hover: ':hover',
  pressed: ':active'
);

@function resolve($theme, $resolvers) {
  $theme: elevation-theme.resolve(
    $theme,
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (
      container-elevation,
      focus-container-elevation,
      hover-container-elevation,
      pressed-container-elevation,
      lowered-container-elevation,
      lowered-focus-container-elevation,
      lowered-hover-container-elevation,
      lowered-pressed-container-elevation
    ),
    $resolvers: $resolvers
  );

  @return $theme;
}

@mixin theme-styles($theme) {
  @include _elevation(
    (
      default: elevation-theme.get-resolved-theme($theme, container-elevation),
      hover:
        elevation-theme.get-resolved-theme($theme, hover-container-elevation),
      focus:
        elevation-theme.get-resolved-theme($theme, focus-container-elevation),
      pressed:
        elevation-theme.get-resolved-theme($theme, pressed-container-elevation),
    )
  );

  @include _lowered-elevation(
    (
      default:
        elevation-theme.get-resolved-theme($theme, lowered-container-elevation),
      hover:
        elevation-theme.get-resolved-theme(
          $theme,
          lowered-hover-container-elevation
        ),
      focus:
        elevation-theme.get-resolved-theme(
          $theme,
          lowered-focus-container-elevation
        ),
      pressed:
        elevation-theme.get-resolved-theme(
          $theme,
          lowered-pressed-container-elevation
        ),
    )
  );

  @include elevation-theme.theme-styles(
    (
      surface-tint-layer-color: map.get($theme, surface-tint-layer-color),
    )
  );

  @include _container-fill-color(
    (
      default: map.get($theme, container-color),
    )
  );

  @include _set-container-shape(map.get($theme, container-shape));

  @include _icon-color(
    (
      default: map.get($theme, icon-color),
      hover: map.get($theme, hover-icon-color),
      focus: map.get($theme, focus-icon-color),
      pressed: map.get($theme, pressed-icon-color),
    )
  );

  @include _set-icon-size(map.get($theme, icon-size));

  @include ripple-theme.theme(
    (
      hover-state-layer-color: map.get($theme, hover-state-layer-color),
      focus-state-layer-color: map.get($theme, focus-state-layer-color),
      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),
      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),
      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),
      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),
    )
  );
}

@mixin _lowered-elevation($elevation-map) {
  &.md3-fab--lowered {
    @include _elevation($elevation-map);
  }
}

@mixin _elevation($elevation-map) {
  @include state.default($selectors) {
    @include elevation-theme.theme-styles(
      state.get-default-state($elevation-map)
    );
  }

  @include state.hover($selectors) {
    @include elevation-theme.theme-styles(
      state.get-hover-state($elevation-map)
    );
  }

  @include state.focus($selectors) {
    @include elevation-theme.theme-styles(
      state.get-focus-state($elevation-map)
    );
  }

  @include state.pressed($selectors) {
    @include elevation-theme.theme-styles(
      state.get-pressed-state($elevation-map)
    );
  }
}

@mixin _container-fill-color($color-or-map) {
  @include state.default($selectors) {
    @include _set-container-fill-color(state.get-default-state($color-or-map));
  }
}

@mixin _set-container-fill-color($color) {
  background-color: $color;
}

@mixin _set-container-shape($radius) {
  &,
  .md3-fab__ripple {
    border-radius: $radius;
  }
}

@mixin _icon-color($color-or-map) {
  @include state.default($selectors) {
    @include _set-icon-color(state.get-default-state($color-or-map));
  }

  @include state.hover($selectors) {
    @include _set-icon-color(state.get-hover-state($color-or-map));
  }

  @include state.focus($selectors) {
    @include _set-icon-color(state.get-focus-state($color-or-map));
  }

  @include state.pressed($selectors) {
    @include _set-icon-color(state.get-pressed-state($color-or-map));
  }
}

@mixin _set-icon-color($color) {
  .md3-fab__icon {
    color: $color;
  }
}

@mixin _set-icon-size($size) {
  .md3-fab__icon {
    width: $size;
    height: $size;
    font-size: $size;
    --mdc-icon-size: $size;
  }
}

@mixin state($ripple-theme) {
  .md3-fab__ripple {
    @include ripple-theme.theme($ripple-theme);
  }
}
