//
// Copyright 2021 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use 'sass:meta';
@use '@material/ripple/ripple-theme';
@use '@material/theme/state';
@use '@material/mwc-../elevation/lib/elevation-theme';
@use './button-theme';

$_selectors: button-theme.$selectors;

@function resolve($theme, $resolvers) {
  @return elevation-theme.resolve(
    $theme,
    $shadow-color-token: container-shadow-color,
    $elevation-tokens: (
      container-elevation,
      disabled-container-elevation,
      focus-container-elevation,
      hover-container-elevation,
      pressed-container-elevation
    ),
    $resolvers: $resolvers
  );
}

@mixin theme-styles($theme) {
  @include _elevation(
    (
      default: elevation-theme.get-resolved-theme($theme, container-elevation),
      hover:
        elevation-theme.get-resolved-theme($theme, hover-container-elevation),
      focus:
        elevation-theme.get-resolved-theme($theme, focus-container-elevation),
      pressed:
        elevation-theme.get-resolved-theme($theme, pressed-container-elevation),
      disabled:
        elevation-theme.get-resolved-theme($theme, disabled-container-elevation),
    )
  );

  @include elevation-theme.theme-styles(
    (
      surface-tint-layer-color:
        map.get($theme, conatiner-surface-tint-layer-color),
    )
  );
}

@mixin _elevation($elevations) {
  @include state.default($_selectors) {
    @include elevation-theme.theme-styles(state.get-default-state($elevations));
  }

  @include state.hover($_selectors) {
    @include elevation-theme.theme-styles(state.get-hover-state($elevations));
  }

  @include state.focus($_selectors) {
    @include elevation-theme.theme-styles(state.get-focus-state($elevations));
  }

  @include state.pressed($_selectors) {
    @include elevation-theme.theme-styles(state.get-pressed-state($elevations));
  }
}
